configurations {
    detekt
    ktlint
}

dependencies {
    // code lint
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detektVersion"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
    ktlint("com.pinterest:ktlint:${ktlintVersion}")
}

detekt {
    buildUponDefaultConfig = true
    allRules = true
    autoCorrect = true
    config = files("$projectDir/detekt/detekt.yml")
    baseline = file("$projectDir/detekt/baseline.xml")

    reports {
        txt.enabled = true
        html.enabled = false
        xml.enabled = false
    }
}

// generate idea configs (execute this, ignore the error and restart your idea)
task ktlintToIdea(type: JavaExec, group: "verification") {
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args = ["--apply-to-idea-project"]
}

// format your files
task ktlintFormat(type: JavaExec, group: "formatting") {
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args = ["-F", "src/**/*.kt"]
}

task ktlint(type: JavaExec, group: "verification") {
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args = ["src/**/*.kt"]
}

//task detekt(type: JavaExec, group: "verification") {
//    main = "io.gitlab.arturbosch.detekt.cli.Main"
//    classpath = configurations.detekt
//    def input = "$projectDir"
//    def config = "$projectDir/detekt.yml"
//    def excludes = ".*/build/.*,.*/resources/.*,.*/bin/.*"
//    args = ['--input', input, '--excludes', excludes, '--config', config, '--parallel']
//}

task lint(group: "verification") {
    dependsOn "detekt"
    dependsOn "ktlint"
}
check.dependsOn lint
